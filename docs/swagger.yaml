definitions:
  dopTypes.CreateRep:
    properties:
      id: {}
    type: object
  dopTypes.ErrRep:
    properties:
      desc:
        type: string
      error_code:
        type: string
      fields:
        additionalProperties:
          type: string
        type: object
    type: object
  dopTypes.PaginatedListRep:
    properties:
      page:
        type: integer
      page_size:
        type: integer
      results: {}
      total_count:
        type: integer
    type: object
  entities.AppCUSt:
    properties:
      active:
        type: boolean
      data:
        $ref: '#/definitions/entities.AppDataSt'
      realm_id:
        type: string
    type: object
  entities.AppDataBackendBaseSt:
    properties:
      host:
        type: string
      path:
        type: string
    type: object
  entities.AppDataRemoteRolesSt:
    properties:
      json_path:
        type: string
      url:
        type: string
    type: object
  entities.AppDataSt:
    properties:
      backend_base:
        $ref: '#/definitions/entities.AppDataBackendBaseSt'
      name:
        type: string
      path:
        type: string
      remote_roles:
        $ref: '#/definitions/entities.AppDataRemoteRolesSt'
    type: object
  entities.AppDuplicateReq:
    properties:
      new_name:
        type: string
      new_realm_id:
        type: string
    type: object
  entities.AppSt:
    properties:
      active:
        type: boolean
      data:
        $ref: '#/definitions/entities.AppDataSt'
      id:
        type: string
      realm_id:
        type: string
    type: object
  entities.ConfigSt:
    type: object
  entities.EndpointCUSt:
    properties:
      active:
        type: boolean
      app_id:
        type: string
      data:
        $ref: '#/definitions/entities.EndpointDataSt'
    type: object
  entities.EndpointDataBackendSt:
    properties:
      custom_path:
        type: boolean
      path:
        type: string
    type: object
  entities.EndpointDataIpValidationSt:
    properties:
      allowed_ips:
        items:
          type: string
        type: array
      enabled:
        type: boolean
    type: object
  entities.EndpointDataJwtValidationSt:
    properties:
      enabled:
        type: boolean
      roles:
        items:
          type: string
        type: array
    type: object
  entities.EndpointDataSt:
    properties:
      backend:
        $ref: '#/definitions/entities.EndpointDataBackendSt'
      ip_validation:
        $ref: '#/definitions/entities.EndpointDataIpValidationSt'
      jwt_validation:
        $ref: '#/definitions/entities.EndpointDataJwtValidationSt'
      method:
        type: string
      path:
        type: string
    type: object
  entities.EndpointSt:
    properties:
      active:
        type: boolean
      app_id:
        type: string
      data:
        $ref: '#/definitions/entities.EndpointDataSt'
      id:
        type: string
    type: object
  entities.KrakendEndpointBackendSt:
    properties:
      encoding:
        type: string
      host:
        items:
          type: string
        type: array
      method:
        type: string
      url_pattern:
        type: string
    type: object
  entities.KrakendEndpointExtraConfigAuthValidatorSt:
    properties:
      alg:
        type: string
      cache:
        type: boolean
      cache_duration:
        type: integer
      cookie_key:
        type: string
      disable_jwk_security:
        type: boolean
      jwk_url:
        type: string
      operation_debug:
        type: boolean
      roles:
        items:
          type: string
        type: array
      roles_key:
        type: string
      roles_key_is_nested:
        type: boolean
    type: object
  entities.KrakendEndpointExtraConfigSt:
    properties:
      auth/validator:
        $ref: '#/definitions/entities.KrakendEndpointExtraConfigAuthValidatorSt'
      validation/cel:
        items:
          $ref: '#/definitions/entities.KrakendEndpointExtraConfigValidationCelSt'
        type: array
    type: object
  entities.KrakendEndpointExtraConfigValidationCelSt:
    properties:
      check_expr:
        type: string
    type: object
  entities.KrakendEndpointSt:
    properties:
      backend:
        items:
          $ref: '#/definitions/entities.KrakendEndpointBackendSt'
        type: array
      endpoint:
        type: string
      extra_config:
        $ref: '#/definitions/entities.KrakendEndpointExtraConfigSt'
      input_headers:
        items:
          type: string
        type: array
      input_query_strings:
        items:
          type: string
        type: array
      method:
        type: string
      output_encoding:
        type: string
    type: object
  entities.KrakendExtraConfigSecurityCorsSt:
    properties:
      allow_credentials:
        type: boolean
      allow_headers:
        items:
          type: string
        type: array
      allow_methods:
        items:
          type: string
        type: array
      allow_origins:
        items:
          type: string
        type: array
      expose_headers:
        items:
          type: string
        type: array
      max_age:
        type: string
    type: object
  entities.KrakendExtraConfigSt:
    properties:
      security/cors:
        $ref: '#/definitions/entities.KrakendExtraConfigSecurityCorsSt'
    type: object
  entities.KrakendSt:
    properties:
      $schema:
        type: string
      endpoints:
        items:
          $ref: '#/definitions/entities.KrakendEndpointSt'
        type: array
      extra_config:
        $ref: '#/definitions/entities.KrakendExtraConfigSt'
      read_header_timeout:
        type: string
      read_timeout:
        type: string
      timeout:
        type: string
      version:
        type: integer
    type: object
  entities.ProfileAuthByRefreshTokenRepSt:
    properties:
      access_token:
        type: string
    type: object
  entities.ProfileAuthByRefreshTokenReqSt:
    properties:
      refresh_token:
        type: string
    type: object
  entities.ProfileAuthRepSt:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  entities.ProfileAuthReqSt:
    properties:
      password:
        type: string
    type: object
  entities.ProfileSt:
    type: object
  entities.RealmCUSt:
    properties:
      data:
        $ref: '#/definitions/entities.RealmDataSt'
    type: object
  entities.RealmDataCorsConfSt:
    properties:
      allow_credentials:
        type: boolean
      allow_headers:
        items:
          type: string
        type: array
      allow_methods:
        items:
          type: string
        type: array
      allow_origins:
        items:
          type: string
        type: array
      enabled:
        type: boolean
      max_age:
        type: string
    type: object
  entities.RealmDataDeployConfSt:
    properties:
      conf_file:
        type: string
      method:
        type: string
      url:
        type: string
    type: object
  entities.RealmDataJwtConfSt:
    properties:
      alg:
        type: string
      cache:
        type: boolean
      cache_duration:
        type: integer
      disable_jwk_security:
        type: boolean
      jwk_url:
        type: string
      roles_key:
        type: string
      roles_key_is_nested:
        type: boolean
    type: object
  entities.RealmDataSt:
    properties:
      cors_conf:
        $ref: '#/definitions/entities.RealmDataCorsConfSt'
      deploy_conf:
        $ref: '#/definitions/entities.RealmDataDeployConfSt'
      jwt_conf:
        $ref: '#/definitions/entities.RealmDataJwtConfSt'
      name:
        type: string
      public_base_url:
        type: string
      read_header_timeout:
        type: string
      read_timeout:
        type: string
      timeout:
        type: string
    type: object
  entities.RealmSt:
    properties:
      data:
        $ref: '#/definitions/entities.RealmDataSt'
      id:
        type: string
    type: object
  entities.RoleCUSt:
    properties:
      app_id:
        type: string
      code:
        type: string
      dsc:
        type: string
      is_fetched:
        type: boolean
      realm_id:
        type: string
    type: object
  entities.RoleFetchRemoteRepItemSt:
    properties:
      code:
        type: string
      dsc:
        type: string
    type: object
  entities.RoleFetchRemoteReqSt:
    properties:
      path:
        type: string
      uri:
        type: string
    type: object
  entities.RoleSt:
    properties:
      app_id:
        type: string
      code:
        type: string
      dsc:
        type: string
      id:
        type: string
      is_fetched:
        type: boolean
      realm_id:
        type: string
    type: object
info:
  contact: {}
paths:
  /app:
    get:
      parameters:
      - in: query
        name: active
        type: boolean
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: cols
        type: array
      - in: query
        name: only_count
        type: boolean
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: realm_id
        type: string
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: sort
        type: array
      - in: query
        name: sort_name
        type: string
      - in: query
        name: with_total_count
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dopTypes.PaginatedListRep'
            - properties:
                results:
                  items:
                    $ref: '#/definitions/entities.AppSt'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - app
    post:
      parameters:
      - description: body
        in: body
        name: body
        schema:
          $ref: '#/definitions/entities.AppCUSt'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dopTypes.CreateRep'
            - properties:
                id:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - app
  /app/:id:
    delete:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - app
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.AppSt'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - app
    put:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        schema:
          $ref: '#/definitions/entities.AppCUSt'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - app
  /app/:id/duplicate:
    post:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        schema:
          $ref: '#/definitions/entities.AppDuplicateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - app
  /app/:id/sync_roles:
    post:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - app
  /config:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.ConfigSt'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      summary: Get configs
      tags:
      - config
    put:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        schema:
          $ref: '#/definitions/entities.ConfigSt'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      summary: Update configs
      tags:
      - config
  /endpoint:
    get:
      parameters:
      - in: query
        name: active
        type: boolean
      - in: query
        name: app_id
        type: string
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: cols
        type: array
      - in: query
        name: only_count
        type: boolean
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: sort
        type: array
      - in: query
        name: sort_name
        type: string
      - in: query
        name: with_total_count
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dopTypes.PaginatedListRep'
            - properties:
                results:
                  items:
                    $ref: '#/definitions/entities.EndpointSt'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - endpoint
    post:
      parameters:
      - description: body
        in: body
        name: body
        schema:
          $ref: '#/definitions/entities.EndpointCUSt'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dopTypes.CreateRep'
            - properties:
                id:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - endpoint
  /endpoint/:id:
    delete:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - endpoint
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.EndpointSt'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - endpoint
    put:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        schema:
          $ref: '#/definitions/entities.EndpointCUSt'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - endpoint
  /profile:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.ProfileSt'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - profile
  /profile/auth:
    post:
      parameters:
      - description: body
        in: body
        name: body
        schema:
          $ref: '#/definitions/entities.ProfileAuthReqSt'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.ProfileAuthRepSt'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - profile
  /profile/auth/token:
    post:
      parameters:
      - description: body
        in: body
        name: body
        schema:
          $ref: '#/definitions/entities.ProfileAuthByRefreshTokenReqSt'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.ProfileAuthByRefreshTokenRepSt'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - profile
  /realm:
    get:
      parameters:
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: cols
        type: array
      - in: query
        name: only_count
        type: boolean
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: sort
        type: array
      - in: query
        name: sort_name
        type: string
      - in: query
        name: with_total_count
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dopTypes.PaginatedListRep'
            - properties:
                results:
                  items:
                    $ref: '#/definitions/entities.RealmSt'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - realm
    post:
      parameters:
      - description: body
        in: body
        name: body
        schema:
          $ref: '#/definitions/entities.RealmCUSt'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dopTypes.CreateRep'
            - properties:
                id:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - realm
  /realm/:id:
    delete:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - realm
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.RealmSt'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - realm
    put:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        schema:
          $ref: '#/definitions/entities.RealmCUSt'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - realm
  /realm/:id/deploy:
    post:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - realm
  /realm/:id/export:
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.KrakendSt'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - realm
  /realm/:id/import_conf:
    post:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - realm
  /realm/:id/preview_conf:
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.KrakendSt'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - realm
  /role:
    get:
      parameters:
      - in: query
        name: app_id
        type: string
      - in: query
        name: app_id_or_null
        type: string
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: cols
        type: array
      - in: query
        name: is_fetched
        type: boolean
      - in: query
        name: only_count
        type: boolean
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: realm_id
        type: string
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: sort
        type: array
      - in: query
        name: sort_name
        type: string
      - in: query
        name: with_total_count
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dopTypes.PaginatedListRep'
            - properties:
                results:
                  items:
                    $ref: '#/definitions/entities.RoleSt'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - role
    post:
      parameters:
      - description: body
        in: body
        name: body
        schema:
          $ref: '#/definitions/entities.RoleCUSt'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dopTypes.CreateRep'
            - properties:
                id:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - role
  /role/:id:
    delete:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - role
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.RoleSt'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - role
    put:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        schema:
          $ref: '#/definitions/entities.RoleCUSt'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - role
  /role/fetch_remote_uri:
    post:
      parameters:
      - description: body
        in: body
        name: body
        schema:
          $ref: '#/definitions/entities.RoleFetchRemoteReqSt'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.RoleFetchRemoteRepItemSt'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dopTypes.ErrRep'
      tags:
      - role
swagger: "2.0"
